---
---
// Rodriguez Bitcoin Fruit Simulator
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Bitcoin Fruit Simulator</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      body {
        min-height: 100vh;
        background: linear-gradient(135deg, #fff 0%, #c0c0c0 100%);
        font-family: 'Segoe UI', 'Arial', sans-serif;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0;
      }
      .container {
        background: rgba(255,255,255,0.97);
        border-radius: 18px;
        box-shadow: 0 8px 32px rgba(150, 150, 150, 0.15);
        padding: 36px;
        max-width: 420px;
        width: 100%;
        text-align: center;
        border: 2px solid #e0e0e0;
      }
      .title {
        font-size: 2em;
        font-weight: bold;
        color: #222;
        margin-bottom: 8px;
      }
      .subtitle {
        font-size: 1.1em;
        color: #555;
        margin-bottom: 22px;
      }
      .btc-price {
        padding: 16px 0;
        background: linear-gradient(90deg, #ffd580 0%, #fff3e0 100%);
        border-radius: 12px;
        margin-bottom: 20px;
        font-size: 1.25em;
        color: #f7931a;
        font-weight: bold;
      }
      .fruit-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        gap: 10px;
        margin-top: 16px;
        margin-bottom: 8px;
      }
      .fruit-card {
        background: #faf9fa;
        border-radius: 10px;
        padding: 18px 7px 12px 7px;
        border: 1px solid #e0e0e0;
        box-shadow: 0 2px 4px rgba(200,200,200,0.09);
      }
      .fruit-emoji {
        font-size: 2em;
      }
      .fruit-name {
        font-size: 1.07em;
        margin-top: 3px;
        color: #222;
      }
      .fruit-count {
        font-size: 1.1em;
        color: #f7931a;
        font-weight: 600;
        margin-top: 4px;
        margin-bottom: 3px;
      }
      .fruit-price {
        font-size: 0.93em;
        color: #777;
      }
      .last-updated {
        font-size: 0.9em;
        color: #888;
        margin-bottom: 8px;
      }
      .refresh-btn {
        margin-top: 14px;
        padding: 10px 28px;
        border-radius: 25px;
        background: linear-gradient(90deg, #b0b4bd 0%, #7e8089 100%);
        color: #fff;
        border: none;
        font-size: 1em;
        cursor: pointer;
        font-weight: 500;
      }
      .refresh-btn:hover {
        background: linear-gradient(90deg, #727478 0%, #b0b4bd 100%);
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="title">🪙 Bitcoin Fruit Simulator</div>
      <div class="subtitle">See how many fruits you can buy with 1 BTC (simulation)</div>
      <div class="btc-price" id="btcPrice"></div>
      <div class="last-updated" id="simTimestamp"></div>
      <div class="fruit-grid" id="fruitGrid"></div>
      <button class="refresh-btn" onclick="simulate()">🔄 Simulate next move</button>
    </div>

    <script>
      const FRUITS = [
        { name: "Apples", emoji: "🍎", price: 0.75 },
        { name: "Bananas", emoji: "🍌", price: 0.35 },
        { name: "Oranges", emoji: "🍊", price: 0.65 },
        { name: "Grapes", emoji: "🍇", price: 2.99 },
        { name: "Strawberries", emoji: "🍓", price: 4.50 },
        { name: "Pineapples", emoji: "🍍", price: 3.25 }
      ];

      let btcPrice = 118000;
      let lastMove = Date.now();

      function randomMove(price) {
        const moves = [1.0005, 0.9991, 1.001];
        const move = moves[Math.floor(Math.random() * moves.length)];
        return +(price * move).toFixed(2);
      }

      function render() {
        document.getElementById('btcPrice').textContent = `₿ 1 BTC = $${btcPrice.toLocaleString()}`;
        document.getElementById('simTimestamp').textContent = `Last change: ${new Date().toLocaleTimeString()}`;
        document.getElementById('fruitGrid').innerHTML = FRUITS.map(fruit => {
          const count = Math.floor(btcPrice / fruit.price).toLocaleString();
          return `
            <div class="fruit-card">
              <div class="fruit-emoji">${fruit.emoji}</div>
              <div class="fruit-name">${fruit.name}</div>
              <div class="fruit-count">${count}</div>
              <div class="fruit-price">$${fruit.price.toFixed(2)} each</div>
            </div>
          `;
        }).join('');
      }

      function simulate() {
        btcPrice = randomMove(btcPrice);
        lastMove = Date.now();
        render();
      }

      // Auto-advance simulation every 30 seconds
      setInterval(simulate, 30000);

      // Initial render
      render();
    </script>
  </body>
</html>
